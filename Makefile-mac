# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile-mac                                       :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: nneronin <nneronin@student.hive.fi>        +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2020/06/09 07:31:15 by nneronin          #+#    #+#              #
#    Updated: 2021/08/10 13:34:11 by nneronin         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

SHELL_NAME	:= $(shell uname -s)

RED			:=	"\e[0;31m"
GREEN		:=	"\x1b[38;5;119m"
ORANGE		:=	"\x1b[38;5;208m"
YELLOW		:=	"\e[0;33m"
BLUE		:=	"\e[0;34m"
MAGENTA		:=	"\e[0;35m"
CYAN		:=	"\e[0;36m"
UNDERLINE	:=	"\x1b[4m"
RESET		:=	"\e[0m"

CFILES		=	ai_attack.c\
				ai_movement.c\
				animate_wsprite.c\
				args.c\
				blit_bxpm.c\
				camera.c\
				clock.c\
				color_and_brightness.c\
				compute_vline.c\
				crosshair_position.c\
				doom.c\
				endless.c\
				find_sector.c\
				fps.c\
				icon.c\
				get_entity_state.c\
				help.c\
				keys.c\
				malloc_texture_pos.c\
				map_events.c\
				minimap.c\
				movement.c\
				orientation.c\
				precompute_buy_menu.c\
				precompute_entities.c\
				precompute_projectiles.c\
				precompute_skybox.c\
				precompute_walls.c\
				precompute_weapon.c\
				project_entity.c\
				project_wall.c\
				protalloc.c\
				purge_entities.c\
				put_pixels.c\
				random.c\
				reload_map.c\
				sound.c\
				spawn_entity.c\
				update_screen.c\
				sector_trigger_events.c\
				wall_to_screen_xz.c\
				UI/game_loading.c\
				UI/game_over.c\
				UI/game_pause.c\
				UI/game_quit.c\
				ParseMap/parse_map.c\
				ParseMap/parse_map_events.c\
				ParseMap/parse_map_header.c\
				ParseMap/parse_map_sector.c\
				ParseMap/parse_map_sprite.c\
				ParseMap/validate_map1.c\
				ParseMap/validate_map2.c\
				Init/init.c\
				Init/init_entity.c\
				Init/init_game_mode.c\
				Init/init_glock.c\
				Init/init_inventory.c\
				Init/init_kar.c\
				Init/init_launcher.c\
				Init/init_minigun.c\
				Init/init_minimap.c\
				Init/init_player.c\
				Init/init_render.c\
				Init/init_scale.c\
				Init/init_sdl.c\
				Init/init_shotgun.c\
				Init/init_slope.c\
				Init/init_textures.c\
				Init/init_weapons.c\
				Math/math1.c\
				Math/math2.c\
				Math/math3.c\
				Math/math4.c\
				Math/math5.c\
				Math/math6.c\
				Math/math7.c\
				Math/math8.c\
				Math/math9.c\
				Math/math10.c\
				Free/free1.c\
				Free/free2.c\
				Free/free3.c\
				Free/free4.c\
				BuyMenu/buy_menu.c\
				BuyMenu/buy_menu_buttons.c\
				BuyMenu/buy_menu_help.c\
				BuyMenu/buy_menu_init.c\
				BuyMenu/buy_menu_player.c\
				BuyMenu/buy_menu_player_stats.c\
				BuyMenu/buy_menu_player_upgrades.c\
				BuyMenu/buy_menu_weapon.c\
				BuyMenu/buy_menu_weapon_stats.c\
				BuyMenu/buy_menu_weapon_upgrades.c\
				Draw/draw2.c\
				Draw/draw_bullet_holes.c\
				Draw/draw_ceiling.c\
				Draw/draw_crosshair.c\
				Draw/draw_entity.c\
				Draw/draw_floor.c\
				Draw/draw_floor_and_ceiling.c\
				Draw/draw_hud.c\
				Draw/draw_neighbor_wall.c\
				Draw/draw_portal_texture.c\
				Draw/draw_projectile.c\
				Draw/draw_skybox_ceiling.c\
				Draw/draw_skybox_floor.c\
				Draw/draw_skybox_wall.c\
				Draw/draw_skybox.c\
				Draw/draw_wall.c\
				Draw/draw_weapon.c\
				Draw/draw_wsprites.c\
				Draw/draw_hud_utils.c\
				Draw/draw_vline.c\
				Draw/draw_line.c\
				EntityCoords/alfred1.c\
				EntityCoords/alfred2.c\
				EntityCoords/barrel.c\
				EntityCoords/ceiling_lamp.c\
				EntityCoords/gargoyl.c\
				EntityCoords/ghost1.c\
				EntityCoords/ghost2.c\
				EntityCoords/lamp.c\
				EntityCoords/spooky1.c\
				EntityCoords/spooky2.c\
				EntityCoords/meat_hook.c\
				EntityCoords/med_kit.c\
				EntityCoords/torch.c\
				EntityCoords/rift.c\
				CollisionDetection/collision_detection.c\
				CollisionDetection/horizontal_collision.c\
				CollisionDetection/vertical_collision.c\
				CollisionDetection/object_collision.c\
				CollisionDetection/slide_collision.c\
				CollisionDetection/projectile_collision.c\
				CollisionDetection/crouch_collision.c
				
NAME		=	doom
CDIR		=	srcs
ODIR		=	obj
INC			=	-I./inc -I../
SRCS		=	$(addprefix $(CDIR)/,$(CFILES))
OBJ			=	$(addprefix $(ODIR)/,$(CFILES:.c=.o))
DEP			=	$(OBJ:.o=.d)

SDL_DIR		:= ../libs/SDL_Frameworks
SDL_MAIN	:= -I $(SDL_DIR)/SDL2.framework/Headers -framework SDL2 -F $(SDL_DIR)
SDL_IMAGE	:= -I $(SDL_DIR)/SDL2_image.framework/Headers -framework SDL2_image -F $(SDL_DIR)
SDL_MIXER	:= -I $(SDL_DIR)/SDL2_mixer.framework/Headers -framework SDL2_mixer -F $(SDL_DIR)
SDL_TTF		:= -I $(SDL_DIR)/SDL2_ttf.framework/Headers -framework SDL2_ttf -F $(SDL_DIR)

LIB_DIR		:= ../libs
LIBFT		:= -I $(LIB_DIR)/libft $(LIB_DIR)/libft/libft.a
LIBPF		:= -I $(LIB_DIR)/libpf $(LIB_DIR)/libpf/libpf.a
LIBTP		:= -I $(LIB_DIR)/libtp $(LIB_DIR)/libtp/libtp.a
LIBGFX		:= -I $(LIB_DIR)/libgfx $(LIB_DIR)/libgfx/libgfx.a
LIBBXPM		:= -I $(LIB_DIR)/libbxpm $(LIB_DIR)/libbxpm/libbxpm.a
LIBUI		:= -I $(LIB_DIR)/better_libui $(LIB_DIR)/better_libui/libui.a

LIBS		+=	$(INC) $(SDL_MAIN) $(SDL_IMAGE) $(SDL_MIXER) $(SDL_TTF)\
				$(LIBFT) $(LIBTP) $(LIBPF) $(LIBBXPM) $(LIBUI) $(LIBGFX)

CFLAGS		=	-Wall -Wextra -MMD -Werror -Wfatal-errors

RESOURCES	=	./resources

all: $(RESOURCES) $(ODIR) $(NAME)

-include $(DEP)

$(ODIR):
	@mkdir -p $@
	@mkdir -p $@/UI
	@mkdir -p $@/Init
	@mkdir -p $@/Math
	@mkdir -p $@/Free
	@mkdir -p $@/Draw
	@mkdir -p $@/BuyMenu
	@mkdir -p $@/ParseMap
	@mkdir -p $@/EntityCoords
	@mkdir -p $@/CollisionDetection
	
$(NAME): $(OBJ)
	@gcc $(CFLAGS) $(LIBS) $(OBJ) -o $(NAME)
	@echo "read 'icns' (-16455) \"resources/ICON/DND.icns\";" >> icon.rsrc
	@Rez -a icon.rsrc -o $(NAME)
	@SetFile -a C $(NAME)
	@rm icon.rsrc
	@printf $(ORANGE)$(UNDERLINE)"\e[F\e[JDoom is ready $(SHELL_NAME)\n"$(RESET)

$(ODIR)/%.o: $(CDIR)/%.c
	@gcc -c $< -o $@ $(CFLAGS) $(LIBS) -w
	@printf $(GREEN)"\e[F\e[JCompiling $<\n"$(RESET)

clean:
	@printf $(CYAN)"[INFO]	Deleted objects\n"$(RESET)
	@rm -rf $(ODIR)

fclean: clean
	@printf $(CYAN)"[INFO]	Deleted $(NAME)\n"$(RESET)
	@rm -f $(NAME)

$(RESOURCES):
	@./google_drive.sh
	@tar -xf file.tar.gz
	@rm -rf file.tar.gz

framework:
	@mkdir -p ~/Library/Frameworks
ifeq ("$(wildcard ~/Library/Frameworks/SDL2*.framework)","")
	@cp -Rf $(SDL_DIR)/SDL2.framework ~/Library/Frameworks/
	@cp -Rf $(SDL_DIR)/SDL2_ttf.framework ~/Library/Frameworks/
	@cp -Rf $(SDL_DIR)/SDL2_image.framework ~/Library/Frameworks/
	@cp -Rf $(SDL_DIR)/SDL2_mixer.framework ~/Library/Frameworks/
endif

framework_del:
	@rm -rf ~/Library/Frameworks/SDL2*.framework
	@/bin/rm -f $(NAME)
	@printf $(CYAN)"[INFO]	Deleted SDL2 Frameworks from ~/Library/Frameworks\n"$(RESET)

re: fclean all

.PHONY: clean, all, re, fclean, resources, framework, framework_del
